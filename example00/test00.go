package main

import "fmt"

/**
Go 是静态类型语⾔言，不能在运⾏行期改变变量类型。
 */
func main() {
	//使⽤用关键字 var 定义变量，自动初始化为零值。如果提供初始化值，可省略变量类型，由编译器⾃自动推断。
	var x int
	var f float32 = 1.6
	var s = "abc"
	fmt.Println(x, f, s)

	//在函数内部，可⽤用更简略的 ":=" ⽅方式定义变量。
	x1 := 123
	fmt.Println(x1)

	//多变量赋值时，先计算所有相关值，然后再从左到右依次赋值。
	data, i := [3]int{0, 1, 2}, 0
	i, data[i] = 2, 100 // (i = 0) -> (i = 2), (data[0] = 100)

	//注意重新赋值与定义新同名变量的区别
	s1 := "abc"
	println(&s1)
	s1, y := "hello", 20 // 重新赋值: 与前 s 在同⼀一层次的代码块中，且有新的变量被定义。
	println(&s1, y)      // 通常函数多返回值 err 会被重复使⽤用。
	{
		s1, z := 1000, 30 // 定义新同名变量: 不在同⼀一层次代码块。
		println(&s1, z)
	}

}
